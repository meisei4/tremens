CREATE TABLE Habit (
    HabitID INTEGER PRIMARY KEY,
    Name TEXT NOT NULL UNIQUE
);

getHabitId:
SELECT HabitID FROM Habit WHERE Name = ?;

insertHabit:
INSERT INTO Habit(Name) VALUES (?);

deleteHabit:
DELETE FROM Habit WHERE Name = ?;


CREATE TABLE Tracking (
    TrackingID INTEGER PRIMARY KEY,
    HabitID INTEGER NOT NULL,
    Date INTEGER NOT NULL,
    UNIQUE(HabitID, Date),
    FOREIGN KEY (HabitID) REFERENCES Habit(HabitID)
);

--TODO not sure if this IGNORE actually works well with the UNIQUE constraint
insertTracking:
INSERT OR IGNORE INTO Tracking(HabitID, Date) VALUES (?, ?);

deleteTrackingForDate:
DELETE FROM Tracking
WHERE HabitID = ?
AND Date = ?;

deleteTrackingForHabit:
DELETE FROM Tracking WHERE HabitID = (SELECT HabitID FROM Habit WHERE Name = ?);

selectHabitWithRecentTracking:
SELECT Habit.HabitID, Habit.Name, groupedTracking.Dates
FROM Habit
LEFT JOIN (
    SELECT HabitID, GROUP_CONCAT(Date) AS Dates
    FROM Tracking
    WHERE Date >= ? AND Date <= ?
    GROUP BY HabitID
) AS groupedTracking ON Habit.HabitID = groupedTracking.HabitID;


